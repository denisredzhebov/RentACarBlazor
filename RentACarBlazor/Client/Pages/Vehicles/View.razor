@page "/vehicles/view/{id:int}"
@using System.Text.Json
@using System.Text

@inject HttpClient Http
@inject NavigationManager NavManager


<h3 class="card-title">@vehicle.Make @vehicle.Model Details</h3>
<hr/>
<br/>

<EditForm Model="@vehicle">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <fieldset disabled>
    <div class="form-group">
        <label>Make: </label>
        <div>
            <InputSelect @bind-Value="vehicle.MakeId" class="form-control">
                <option value="">-- Select Make --</option>
                @if(Makes != null)
                {
                    foreach (var make in Makes)
                    {
                        <option value="@make.Id">@make.Name</option>
                    }
                }
             </InputSelect>
            <ValidationMessage For="@(() => vehicle.MakeId)"/>
        </div>
    </div>
    <div class="form-group">
        <label>Model: </label>
        <div>
            <InputSelect @bind-Value="vehicle.ModelId" class="form-control">
                <option value="">-- Select Model --</option>
                @if(Models != null)
                {
                    foreach (var model in Models)
                    {
                        <option value="@model.Id">@model.Name</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => vehicle.ModelId)"/>
        </div>
    </div>
    <div class="form-group">
        <label>Colour: </label>
        <div>
            <InputSelect @bind-Value="vehicle.ColourId" class="form-control">
                <option value="">-- Select Colour --</option>
                @if(Colours != null)
                {
                    foreach (var colour in Colours)
                    {
                        <option value="@colour.Id">@colour.Name</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => vehicle.ColourId)"/>
        </div>
    </div>
    <div class="form-group">
        <label>Year: </label>
        <div>
           <InputNumber @bind-Value="vehicle.Year" class="form-control"/>
           <ValidationMessage For="@(() => vehicle.Year)"/>
        </div>
    </div>
    <div class="form-group">
        <label>License Plate Number: </label>
        <div>
           <InputText @bind-Value="vehicle.LicensePlateNumber" class="form-control"/>
           <ValidationMessage For="@(() => vehicle.LicensePlateNumber)"/>
        </div>
    </div>
    <div class="form-group">
        <label>Vehicle Identification Number: </label>
        <div>
           <InputText @bind-Value="vehicle.Vin" class="form-control"/>
           <ValidationMessage For="@(() => vehicle.Vin)"/>
        </div>
    </div>
    <div class="form-group">
        <label>Daily Rate: </label>
        <div>
           <InputNumber @bind-Value="vehicle.RentalRate" class="form-control"/>
           <ValidationMessage For="@(() => vehicle.RentalRate)"/>
        </div>
    </div>
    </fieldset>
    
    <button class="btn btn-outline-dark btn-block" @onclick="NavigateToList">
        <span class="oi oi-arrow-left"></span>
        Back To list
    </button>
</EditForm>

@code {
    private IList<Make> Makes;
    private IList<Model> Models;
    private IList<Colour> Colours;

    [Parameter] public int id { get; set; }

    Vehicle vehicle = new Vehicle();

    protected async override Task OnParametersSetAsync()
    {
        vehicle = await Http.GetFromJsonAsync<Vehicle>($"api/vehicles/{id}");

    }

    protected async override Task OnInitializedAsync()
    {
        Makes = await Http.GetFromJsonAsync<List<Make>>($"api/makes");
        Models = await Http.GetFromJsonAsync<List<Model>>("api/models");
        Colours = await Http.GetFromJsonAsync<List<Colour>>("api/colours");
    }


     void NavigateToList()
    {
        NavManager.NavigateTo("/vehicles/");
    }

}
    

