@page "/customers/edit/{id:int}"
@using System.Text.Json
@using System.Text

@inject HttpClient Http
@inject NavigationManager NavManager


<h3 class="card-title">Update Customer</h3>
<hr/>
<br/>

<EditForm Model="@customer" OnValidSubmit="UpdateCustomer">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

     <div class="form-group">
        <label>Tax Identification Number: </label>
        <div>
           <InputText @bind-Value="customer.TaxId" class="form-control"/>
           <ValidationMessage For="@(() => customer.TaxId)"/>
        </div>
    </div>
    <div class="form-group">
        <label>First Name: </label>
        <div>
           <InputText @bind-Value="customer.FirstName" class="form-control"/>
           <ValidationMessage For="@(() => customer.FirstName)"/>
        </div>
    </div>
    <div class="form-group">
        <label>Last Name: </label>
        <div>
           <InputText @bind-Value="customer.LastName" class="form-control"/>
           <ValidationMessage For="@(() => customer.LastName)"/>
        </div>
    </div>
    <div class="form-group">
        <label>Email Address: </label>
        <div>
           <InputText @bind-Value="customer.EmailAddress" class="form-control"/>
           <ValidationMessage For="@(() => customer.EmailAddress)"/>
        </div>
    </div>
    <div class="form-group">
        <label>Contact Number: </label>
        <div>
           <InputText @bind-Value="customer.ContactNumber" class="form-control"/>
           <ValidationMessage For="@(() => customer.ContactNumber)"/>
        </div>
    </div>
    <div class="form-group">
        <label>Address: </label>
        <div>
           <InputTextArea @bind-Value="customer.Address" class="form-control"/>
           <ValidationMessage For="@(() => customer.Address)"/>
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        Update Customer
    </button>

    <button class="btn btn-outline-dark btn-block" @onclick="NavigateToList">
        <span class="oi oi-arrow-left"></span>
        Back To list
    </button>
</EditForm>

@code {
    
    [Parameter] public int id { get; set; }

    Customer customer = new Customer();

    protected async override Task OnParametersSetAsync()
    {
        customer = await Http.GetFromJsonAsync<Customer>($"api/customers/{id}");

    }

    private async Task UpdateCustomer()
    {
        await Http.PutAsJsonAsync($"api/customers/{id}", customer);
        NavManager.NavigateTo("/customers/");
     
    }

    void NavigateToList()
    {
        NavManager.NavigateTo("/customers/");
    }
}
    

