@page "/bookings/create/"
@using System.Text.Json
@using System.Text

@inject HttpClient Http
@inject NavigationManager NavManager


<h3 class="card-title">Create New Booking</h3>
<hr/>
<br/>

<EditForm Model="@booking" OnValidSubmit="CreateBooking">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

     <div class="form-group">
        <label>Vehicle: </label>
        <div>
           <InputSelect @bind-Value="booking.VehicleId" class="form-control">
            <option value="">-- Select Vehicle --</option>
                @if(Vehicles != null)
                {
                    foreach (var vehicle in Vehicles)
                    {
                        <option value="@vehicle.Id">@vehicle.Make.Name @vehicle.Model.Name | @vehicle.LicensePlateNumber</option>
                    }
                }
           </InputSelect>
           <ValidationMessage For="@(() => @booking.VehicleId)"/>
        </div>
    </div>
    <div class="form-group">
        <label>Customer: </label>
        <div>
           <InputSelect @bind-Value="booking.CustomerId" class="form-control">
            <option value="">-- Select Customer --</option>
                @if(Customers != null)
                {
                    foreach (var customer in Customers)
                    {
                        <option value="@customer.Id">@customer.TaxId | @customer.EmailAddress</option>
                    }
                }
           </InputSelect>
           <ValidationMessage For="@(() => @booking.CustomerId)"/>
        </div>
    </div>

    <div class="form-group">
        <label>Date Out: </label>
        <div>
           <InputDate @bind-Value="booking.DateOut" class="form-control"/>
           <ValidationMessage For="@(() => booking.DateOut)"/>
        </div>
    </div>
    <div class="form-group">
        <label>Date In: </label>
        <div>
           <InputDate @bind-Value="booking.DateIn" class="form-control"/>
           <ValidationMessage For="@(() => booking.DateIn)"/>
        </div>
    </div>
   
    <button type="submit" class="btn btn-success btn-block">
        Create Booking
    </button>
</EditForm>

@code {
    Booking booking = new Booking()
        {
            DateIn = DateTime.Now,
            DateOut = DateTime.Now
        };

    private IList<Vehicle> Vehicles;
    private IList<Customer> Customers;

    protected async override Task OnInitializedAsync()
    {
        Vehicles = await Http.GetFromJsonAsync<List<Vehicle>>("api/vehicles");
        Customers = await Http.GetFromJsonAsync<List<Customer>>("api/customers");
    }

    private async Task CreateBooking()
    {

        await Http.PostAsJsonAsync("api/bookings", booking);
        NavManager.NavigateTo("/bookings/");
     
    }
}
    
