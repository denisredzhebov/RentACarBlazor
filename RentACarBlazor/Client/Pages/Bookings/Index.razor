@page "/bookings/"
@inject IJSRuntime js

@inject HttpClient Http
@attribute [Authorize]

<h3 class="card-title">Bookings</h3>
<hr/>
<br/>


<a href="/bookings/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Booking    
</a>
<br/>
<br/>


@if(Bookings == null)
{
    <div class="alert alert-info">Loading Bookings..</div>
} 
else
{
    <table class="table table-table-responsive">
        <thead>
            <tr>
                <th>Customer Tax Id</th>
                <th>Date Out</th>
                <th>Date In</th>
                <th>Total Days</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Bookings)
           {
               <tr>
                   <td>@item.Customer.TaxId</td>
                   <td>@item.DateOut.Date.ToString("dd MMMM yyyy")</td>
                   <td>@item.DateIn?.Date.ToString("dd MMMM yyyy")</td>
                   <td>@(item.DateIn != null ? (item.DateIn.Value - item.DateOut).TotalDays.ToString() 
                       : "To Be Determined")</td>      
                   <td>
                       <a href="/bookings/view/@item.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                       </a>
                       <a href="/bookings/edit/@item.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                       </a>
                       <button class="btn btn-danger" @onclick="@(()=>Delete(item.Id))">
                            <span class="oi oi-delete"></span>
                       </button>
                   </td>
               </tr>
           }
        </tbody>
    </table>
}

@code {
    private List<Booking> Bookings = new List<Booking>();

    protected async override Task OnInitializedAsync()
    {
        Bookings = await Http.GetFromJsonAsync<List<Booking>>("api/bookings");
    }

    async Task Delete(int bookingId)
    {
        var booking = Bookings.First(q => q.Id == bookingId);

        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {booking.Customer.TaxId}?");
        if(confirm)
        {
            await Http.DeleteAsync($"api/bookings/{bookingId}");
            await OnInitializedAsync();
        }

    }
}

